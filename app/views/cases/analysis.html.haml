- provide(:title, 'Your Progress')
- provide(:subtitle, 'Analysis of all of the cases you have done')

/ table for top row (stats, comments and radar)
%table{:style => "width:100%;"}
  %tr
    %td{:style => "width:240px;", :valign => "top"}
      / stats panel
      .panel.type1
        %table#analysis_stats
          %tr
            %td
              Total Cases
            %td.value
              = avatar_for(current_user)
              = @user_cases_count
          %tr
            %td
              1st Case Date
            %td.value
              = current_user.cases.first.created_at.strftime("%m/%d/%Y")
          %tr
            %td
              Avg Score /50
            %td.value
              36.4
          %tr
            %td
              Improvement Rate, %
            %td.value
              5%/week
          %tr
            %td
              Weakest Skill
            %td.value
              Analytical (Avg 5.4/10)

      #button_print_analysis.btn
        Print Crib Sheet


    %td{:valign => "top"}
      / comments panel
      #comments_panel.panel.kill_left
        %ul.nav.nav-tabs
          %li
            %a{"data-toggle" => "tab", :href => "#tab_plan"} Plan
          %li
            %a{"data-toggle" => "tab", :href => "#tab_analytic"} Analytic
          %li
            %a{"data-toggle" => "tab", :href => "#tab_struc"} Struc
          %li
            %a{"data-toggle" => "tab", :href => "#tab_conc"} Conc

        .tab-content
          / comment scroll class forces overflow
          / CRAPPY ISSUE WITH MAPPING MEANT I COULDNT DO A PARTIAL
          #tab_plan.comment_scroll.tab-pane.active
            - if @comments_plan.count > 0
              - for comment in @comments_plan

                .cases_comment
                  .from
                    = User.find_by_id(comment.marker_id).name
                    %span.date
                      = comment.created_at.strftime("%d/%m/%Y")
                  .content
                    = comment.plan_s

          #tab_analytic.comment_scroll.tab-pane
            - if @comments_analytic.count > 0
              - for comment in @comments_analytic

                .cases_comment
                  .from
                    = User.find_by_id(comment.marker_id).name
                  .content
                    = comment.analytic_s

          #tab_struc.comment_scroll.tab-pane
            - if @comments_struc.count > 0
              - for comment in @comments_struc

                .cases_comment
                  .from
                    = User.find_by_id(comment.marker_id).name
                  .content
                    = comment.struc_s

          #tab_conc.comment_scroll.tab-pane
            - if @comments_struc.count > 0
              - for comment in @comments_struc

                .cases_comment
                  .from
                    = User.find_by_id(comment.marker_id).name
                  .content
                    = comment.conc_s



    %td{:style => "width:340px;"}
      / radar!
      #chart_radar{:style => "height: 300px; width: 340px;"}


#chart_progress{:style => "width:100%; height:350px;"}


////////////////////////////////////////////
/ Radar Chart Javascript
////////////////////////////////////////////


:javascript

  var chart_radar;

  // load data from rails variable (defined in controller)
  var chartData_radar = #{@chartData_radar};

  // Draw AM Radar Chart
  AmCharts.ready(function () {
    // RADAR CHART
    chart = new AmCharts.AmRadarChart();
    chart.dataProvider = chartData_radar;
    chart.categoryField = "criteria";
    chart.startDuration = 0.3;
    chart.startEffect = ">";
    chart.sequencedAnimation = true;

    // GRAPH - FIRST 5
    var graph = new AmCharts.AmGraph();
    graph.title = "First 5";
    graph.lineColor = "#bdd523"
    graph.fillAlphas = 0.2;
    graph.bullet = "round"
    graph.valueField = "first5"
    graph.balloonText = "[[category]]: [[value]]/10"
    chart.addGraph(graph);

    // GRAPH - LAST 5
    var graph = new AmCharts.AmGraph();
    graph.title = "Last 5";
    graph.lineColor = "#98cdff"
    graph.fillAlphas = 0.2;
    graph.bullet = "round"
    graph.valueField = "last5"
    graph.balloonText = "[[category]]: [[value]]/10"
    chart.addGraph(graph);

    // VALUE AXIS
    var valueAxis = new AmCharts.ValueAxis();
    valueAxis.gridType = "circles";
    valueAxis.fillAlpha = 0.02;
    valueAxis.fillColor = "#000000"
    valueAxis.axisAlpha = 0.1;
    valueAxis.gridAlpha = 0.1;
    valueAxis.fontWeight = "bold"
    valueAxis.minimum = 0;
    valueAxis.maximum = 10;
    chart.addValueAxis(valueAxis);

    // Balloon Settings
    var balloon = chart.balloon;
    balloon.adjustBorderColor = true;
    balloon.color = "#000000";
    balloon.cornerRadius = 5;
    balloon.fillColor = "#000000";
    balloon.fillAlpha = 0.7
    balloon.color = "#FFFFFF"

    // Legend Settings
    var legend = new AmCharts.AmLegend();
    legend.position = "bottom";
    legend.align = "center";
    legend.markerType = "square";
    legend.rollOverGraphAlpha = 0;
    legend.horizontalGap = 5;
    legend.valueWidth = 5;
    legend.switchable = false;
    chart.addLegend(legend);

    // WRITE
    chart.write("chart_radar");
  });


////////////////////////////////////////////
/ Progress graph javascript
////////////////////////////////////////////


:javascript

  var chart_area;

  // loop through model json, construct AM compatabile array + run parseDate
  chartData_progress = [];
  $.getJSON("analysis", function(json) {

    for (var i = 0; i < json.length; i++) {

      var dataObject = {date:parseDate(json[i].date), plan:json[i].plan, analytic:json[i].analytic, struc:json[i].struc, conc:json[i].conc};

      // load array for chart
      chartData_progress.push(dataObject); 
    }

  });

  // draw AM Progress Chart
  AmCharts.ready(function () {
    // SERIAL CHART
    chart = new AmCharts.AmSerialChart();
    // still not yet sure if below line is working?
    // add curly brackets below
    // chart.pathToImages = ' asset_path 'amcharts/'';
    // below from http://www.amcharts.com/javascript/line-chart-with-date-based-data/
    chart.panEventsEnabled = true;
    chart.zoomOutButton = {
        backgroundColor: "#000000",
        backgroundAlpha: 0.15
    };
    chart.dataProvider = chartData_progress;
    chart.categoryField = "date";
    
    // neccessary ?
    chart.autoMargins = false;
    chart.marginRight = 15;
    chart.marginLeft = 15;
    chart.marginBottom = 35;
    chart.marginTop = 10;

    // animations
    chart.startDuration = 0.3;
    chart.startEffect = ">";
    chart.sequencedAnimation = true;

    // scroll bar stuff from: http://www.amcharts.com/javascript/line-chart-with-date-based-data/
    // listen for "dataUpdated" event (fired when chart is rendered) and call zoomChart method when it happens
    chart.addListener("dataUpdated", zoomChart);
    
    // AXES
    // Category
    var categoryAxis = chart.categoryAxis;
    categoryAxis.gridAlpha = 0.07;
    categoryAxis.axisColor = "#DADADA";
    categoryAxis.startOnAxis = true;
    categoryAxis.labelRotation = 45;
    categoryAxis.parseDates = true;
    //http://www.amcharts.com/javascript/line-chart-with-date-based-data/
    categoryAxis.minPeriod = "DD"; // our data is daily, so we set minPeriod to DD

    // Value
    var valueAxis = new AmCharts.ValueAxis();
    valueAxis.stackType = "regular"; // this line makes the chart "stacked"
    valueAxis.gridAlpha = 0.07;
    valueAxis.axisAlpha = 0;
    // change to 50?
    valueAxis.maximum = 40;
    valueAxis.labelsEnabled = false
    chart.addValueAxis(valueAxis);

    // DONT FORGET YOU CAN USE 'GUIDES'

    // GRAPHS
    // first graph - PLAN
    var graph = new AmCharts.AmGraph();
    graph.type = "line";
    graph.title = "Planning";
    graph.valueField = "plan";
    graph.lineAlpha = 1;
    graph.fillAlphas = 0.6; // setting fillAlphas to > 0 value makes it area graph
    chart.addGraph(graph);

    // second graph - ANALYTIC
    graph = new AmCharts.AmGraph();
    graph.type = "line";
    graph.title = "Analytical";
    graph.valueField = "analytic";
    graph.lineAlpha = 1;
    graph.fillAlphas = 0.6;
    chart.addGraph(graph);

    // third graph - STRUC
    graph = new AmCharts.AmGraph();
    graph.type = "line";
    graph.title = "Structure";
    graph.valueField = "struc";
    graph.lineAlpha = 1;
    graph.fillAlphas = 0.6;
    chart.addGraph(graph);

    // fourth graph - CONC
    graph = new AmCharts.AmGraph();
    graph.type = "line";
    graph.title = "Conclusion";
    graph.valueField = "conc";
    graph.lineAlpha = 1;
    graph.fillAlphas = 0.6;
    chart.addGraph(graph);


    // LEGEND
    var legend = new AmCharts.AmLegend();
    legend.position = "bottom";
    legend.align = "center"
    legend.rollOverGraphAlpha = "0.15";
    legend.horizontalGap = 5;
    legend.switchable = false;
    legend.valueWidth = 5;
    chart.addLegend(legend);

    // CURSOR //////////
    // http://www.amcharts.com/javascript/line-chart-with-date-based-data/
    chartCursor = new AmCharts.ChartCursor();
    chartCursor.cursorPosition = "mouse";
    chartCursor.pan = true;
    chartCursor.zoomable = false;
    chart.addChartCursor(chartCursor);


    // Balloon Settings
    var balloon = chart.balloon;
    balloon.adjustBorderColor = true;
    balloon.color = "#000000";
    balloon.cornerRadius = 5;
    balloon.fillColor = "#000000";
    balloon.fillAlpha = 0.7
    balloon.color = "#FFFFFF"


    // SCROLLBAR
    // http://www.amcharts.com/javascript/line-chart-with-date-based-data/
    var chartScrollbar = new AmCharts.ChartScrollbar();
    chartScrollbar.graph = graph;
    chartScrollbar.autoGridCount = true;
    chartScrollbar.scrollbarHeight = 25;
    chartScrollbar.color = "#000000";
    chart.addChartScrollbar(chartScrollbar);

    // WRITE
    chart.write("chart_progress");
    
  });

  // method to parse sql date string into AM compataible Date Object
  function parseDate(dateString) {
     // split the string get each field
    var dateArray = dateString.split("-");
    // now lets create a new Date instance, using year, month and day as parameters
    // month count starts with 0, so we have to convert the month number
    var date = new Date(Number(dateArray[0]), Number(dateArray[1]) - 1, Number(dateArray[2]));

    $('#testing').append(date);

    return date;
  }


  // lifted from http://www.amcharts.com/javascript/line-chart-with-date-based-data/
  // this method is called when chart is first inited as we listen for "dataUpdated" event
  function zoomChart() {
      // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues
      chart.zoomToIndexes(chartData_progress.length - 40, chartData_progress.length - 1);
  }

